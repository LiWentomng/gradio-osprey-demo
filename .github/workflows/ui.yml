name: gradio-ui

on:
  push:
    branches:
      - "main"
  pull_request:

env:
  CI: true
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "1"
  NODE_OPTIONS: "--max-old-space-size=4096"

concurrency:
  group: deploy-${{ github.ref }}-${{ github.event_name == 'push' || github.event.inputs.fire != null }}
  cancel-in-progress: true

jobs:
  quick-checks:
    name: static checks
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        uses: "./.github/actions/install-frontend-deps"
        with:
          always-install-pnpm: true
      - name: build client
        run: pnpm --filter @gradio/client build
      - name: build the wasm module
        run: pnpm --filter @gradio/wasm build
      - name: lint
        run: pnpm lint
        continue-on-error: true
      - name: typecheck
        run: pnpm ts:check
      - name: unit tests
        run: pnpm test:run
  functional-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        uses: "./.github/actions/install-all-deps"
        with:
          always-install-pnpm: true
      - name: install outbreak_forecast dependencies
        run: |
          . venv/bin/activate
          python -m pip install -r demo/outbreak_forecast/requirements.txt
      - run: pnpm exec playwright install chromium
      - name: run browser tests
        run: |
          . venv/bin/activate
          pnpm test:browser
      - name: run browser component tests
        run: |
          . venv/bin/activate
          pnpm run test:ct
  chromatic-deployment:
    runs-on: ubuntu-latest
    if: ${{ !contains( github.event.pull_request.labels.*.name, 'no-visual-update') && !github.event.pull_request.head.repo.fork }}  
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0
      - name: install dependencies
        uses: "./.github/actions/install-all-deps"
        with:
          always-install-pnpm: true
          skip_build: 'true'
      - name: generate theme.css
        run: | 
          . venv/bin/activate
          python scripts/generate_theme.py --outfile js/storybook/theme.css
      - name: build storybook
        run: pnpm build-storybook --quiet
      - name: publish to chromatic
        id: publish-chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: post deployment link to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Chromatic build successful :tada:
            * [Storybook Preview](${{steps.publish-chromatic.outputs.storybookUrl}})
            * [Build Review](${{steps.publish-chromatic.outputs.buildUrl}})
          GITHUB_TOKEN: ${{ secrets.COMMENT_TOKEN }}
          comment_tag: chromatic-build
          pr_number: ${{ env.pr_number }}
