{"guide": {"name": "running-gradio-on-your-web-server-with-nginx", "category": "other-tutorials", "pretty_category": "Other Tutorials", "guide_index": null, "absolute_index": 40, "pretty_name": "Running Gradio On Your Web Server With Nginx", "content": "# Running a Gradio App on your Web Server with Nginx\n\nTags: DEPLOYMENT, WEB SERVER, NGINX\n\n## Introduction\n\nGradio is a Python library that allows you to quickly create customizable web apps for your machine learning models and data processing pipelines. Gradio apps can be deployed on [Hugging Face Spaces](https://hf.space) for free. \n\nIn some cases though, you might want to deploy a Gradio app on your own web server. You might already be using [Nginx](https://www.nginx.com/), a highly performant web server, to serve your website (say `https://www.example.com`), and you want to attach Gradio to a specific subpath on your website (e.g. `https://www.example.com/gradio-demo`). \n\nIn this Guide, we will guide you through the process of running a Gradio app behind Nginx on your own web server to achieve this.\n\n**Prerequisites**\n\n1. A Linux web server with [Nginx installed](https://www.nginx.com/blog/setting-up-nginx/) and [Gradio installed](/quickstart)  \n    \n2. A working Gradio app saved as a python file on your web server\n\n## Editing your Nginx configuration file\n\n1. Start by editing the Nginx configuration file on your web server. By default, this is located at: `/etc/nginx/nginx.conf`\n\nIn the `http` block, add the following line to include server block configurations from a separate file:\n\n```bash\ninclude /etc/nginx/sites-enabled/*;\n```\n\n2. Create a new file in the `/etc/nginx/sites-available` directory (create the directory if it does not already exist), using a filename that represents your app, for example: `sudo nano /etc/nginx/sites-available/my_gradio_app`\n\n3. Paste the following into your file editor:\n\n```bash\nserver {\n    listen 80;\n    server_name example.com www.example.com;  # Change this to your domain name \n\n    location /gradio-demo/ {  # Change this if you'd like to server your Gradio app on a different path\n        proxy_pass http://127.0.0.1:7860/; # Change this if your Gradio app will be running on a different port\n        proxy_redirect off;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n    }\n}\n```\n\n## Run your Gradio app on your web server\n\n1. Before you launch your Gradio app, you'll need to set the `root_path` to be the same as the subpath that you specified in your nginx configuration. This is necessary for Gradio to run on any subpath besides the root of the domain.\n\nHere's a simple example of a Gradio app with a custom `root_path`:\n\n```python\nimport gradio as gr\nimport time\n\ndef test(x):\ntime.sleep(4)\nreturn x\n\ngr.Interface(test, \"textbox\", \"textbox\").queue().launch(root_path=\"/gradio-demo\")\n```\n\n2. Start a `tmux` session by typing `tmux` and pressing enter (optional) \n\nIt's recommended that you run your Gradio app in a `tmux` session so that you can keep it running in the background easily\n\n3. Then, start your Gradio app. Simply type in `python` followed by the name of your Gradio python file. By default, your app will run on `localhost:7860`, but if it starts on a different port, you will need to update the nginx configuration file above.\n\n## Restart Nginx\n\n1. If you are in a tmux session, exit by typing CTRL+B (or CMD+B), followed by the \"D\" key.\n\n2. Finally, restart nginx by running `sudo systemctl restart nginx`. \n\nAnd that's it! If you visit `https://example.com/gradio-demo` on your browser, you should see your Gradio app running there\n\n", "html": "<h1 id=\"running-a-gradio-app-on-your-web-server-with-nginx\">Running a Gradio App on your Web Server with Nginx</h1>\n\n<h2 id=\"introduction\">Introduction</h2>\n\n<p>Gradio is a Python library that allows you to quickly create customizable web apps for your machine learning models and data processing pipelines. Gradio apps can be deployed on <a rel=\"noopener\" target=\"_blank\" href=\"https://hf.space\">Hugging Face Spaces</a> for free. </p>\n\n<p>In some cases though, you might want to deploy a Gradio app on your own web server. You might already be using <a rel=\"noopener\" target=\"_blank\" href=\"https://www.nginx.com/\">Nginx</a>, a highly performant web server, to serve your website (say <code>https://www.example.com</code>), and you want to attach Gradio to a specific subpath on your website (e.g. <code>https://www.example.com/gradio-demo</code>). </p>\n\n<p>In this Guide, we will guide you through the process of running a Gradio app behind Nginx on your own web server to achieve this.</p>\n\n<p><strong>Prerequisites</strong></p>\n\n<ol>\n<li><p>A Linux web server with <a rel=\"noopener\" target=\"_blank\" href=\"https://www.nginx.com/blog/setting-up-nginx/\">Nginx installed</a> and <a rel=\"noopener\" target=\"_blank\" href=\"/quickstart\">Gradio installed</a>  </p></li>\n<li><p>A working Gradio app saved as a python file on your web server</p></li>\n</ol>\n\n<h2 id=\"editing-your-nginx-configuration-file\">Editing your Nginx configuration file</h2>\n\n<ol>\n<li>Start by editing the Nginx configuration file on your web server. By default, this is located at: <code>/etc/nginx/nginx.conf</code></li>\n</ol>\n\n<p>In the <code>http</code> block, add the following line to include server block configurations from a separate file:</p>\n\n<div class='codeblock'><pre><code class='lang-bash'>include /etc/nginx/sites-enabled/*;\n</code></pre></div>\n\n<ol>\n<li><p>Create a new file in the <code>/etc/nginx/sites-available</code> directory (create the directory if it does not already exist), using a filename that represents your app, for example: <code>sudo nano /etc/nginx/sites-available/my_gradio_app</code></p></li>\n<li><p>Paste the following into your file editor:</p></li>\n</ol>\n\n<div class='codeblock'><pre><code class='lang-bash'>server {\n    listen 80;\n    server_name example.com www.example.com;  # Change this to your domain name \n\n    location /gradio-demo/ {  # Change this if you'd like to server your Gradio app on a different path\n        proxy_pass http://127.0.0.1:7860/; # Change this if your Gradio app will be running on a different port\n        proxy_redirect off;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n        proxy_set_header Host $host;\n    }\n}\n</code></pre></div>\n\n<h2 id=\"run-your-gradio-app-on-your-web-server\">Run your Gradio app on your web server</h2>\n\n<ol>\n<li>Before you launch your Gradio app, you'll need to set the <code>root_path</code> to be the same as the subpath that you specified in your nginx configuration. This is necessary for Gradio to run on any subpath besides the root of the domain.</li>\n</ol>\n\n<p>Here's a simple example of a Gradio app with a custom <code>root_path</code>:</p>\n\n<div class='codeblock'><pre><code class='lang-python'>import gradio as gr\nimport time\n\ndef test(x):\ntime.sleep(4)\nreturn x\n\ngr.Interface(test, \"textbox\", \"textbox\").queue().launch(root_path=\"/gradio-demo\")\n</code></pre></div>\n\n<ol>\n<li>Start a <code>tmux</code> session by typing <code>tmux</code> and pressing enter (optional) </li>\n</ol>\n\n<p>It's recommended that you run your Gradio app in a <code>tmux</code> session so that you can keep it running in the background easily</p>\n\n<ol>\n<li>Then, start your Gradio app. Simply type in <code>python</code> followed by the name of your Gradio python file. By default, your app will run on <code>localhost:7860</code>, but if it starts on a different port, you will need to update the nginx configuration file above.</li>\n</ol>\n\n<h2 id=\"restart-nginx\">Restart Nginx</h2>\n\n<ol>\n<li><p>If you are in a tmux session, exit by typing CTRL+B (or CMD+B), followed by the \"D\" key.</p></li>\n<li><p>Finally, restart nginx by running <code>sudo systemctl restart nginx</code>. </p></li>\n</ol>\n\n<p>And that's it! If you visit <code>https://example.com/gradio-demo</code> on your browser, you should see your Gradio app running there</p>\n", "tags": ["DEPLOYMENT", "WEB SERVER", "NGINX"], "spaces": [], "url": "/guides/running-gradio-on-your-web-server-with-nginx/", "contributor": null}}