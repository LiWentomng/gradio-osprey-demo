{"guide": {"name": "reactive-interfaces", "category": "building-interfaces", "pretty_category": "Building Interfaces", "guide_index": 2, "absolute_index": 4, "pretty_name": "Reactive Interfaces", "content": "# Reactive Interfaces\n\nThis guide covers how to get Gradio interfaces to refresh automatically or continuously stream data.\n\n## Live Interfaces\n\nYou can make interfaces automatically refresh by setting `live=True` in the interface. Now the interface will recalculate as soon as the user input changes.\n\n```python\nimport gradio as gr\n\ndef calculator(num1, operation, num2):\n    if operation == \"add\":\n        return num1 + num2\n    elif operation == \"subtract\":\n        return num1 - num2\n    elif operation == \"multiply\":\n        return num1 * num2\n    elif operation == \"divide\":\n        return num1 / num2\n\ndemo = gr.Interface(\n    calculator,\n    [\n        \"number\",\n        gr.Radio([\"add\", \"subtract\", \"multiply\", \"divide\"]),\n        \"number\"\n    ],\n    \"number\",\n    live=True,\n)\ndemo.launch()\n\n```\n<gradio-app space='gradio/calculator_live'></gradio-app>\n\nNote there is no submit button, because the interface resubmits automatically on change.\n\n## Streaming Components\n\nSome components have a \"streaming\" mode, such as `Audio` component in microphone mode, or the `Image` component in webcam mode. Streaming means data is sent continuously to the backend and the `Interface` function is continuously being rerun. \n\nThe difference between `gr.Audio(source='microphone')` and `gr.Audio(source='microphone', streaming=True)`, when both are used in `gr.Interface(live=True)`, is that the first  `Component` will automatically submit data and run the `Interface` function when the user stops recording, whereas the second `Component` will continuously send data and run the `Interface` function *during* recording.\n\nHere is example code of streaming images from the webcam.\n\n```python\nimport gradio as gr\nimport numpy as np\n\ndef flip(im):\n    return np.flipud(im)\n\ndemo = gr.Interface(\n    flip, \n    gr.Image(source=\"webcam\", streaming=True), \n    \"image\",\n    live=True\n)\ndemo.launch()\n    \n```", "html": "<h1 id=\"reactive-interfaces\">Reactive Interfaces</h1>\n\n<p>This guide covers how to get Gradio interfaces to refresh automatically or continuously stream data.</p>\n\n<h2 id=\"live-interfaces\">Live Interfaces</h2>\n\n<p>You can make interfaces automatically refresh by setting <code>live=True</code> in the interface. Now the interface will recalculate as soon as the user input changes.</p>\n\n<div class='codeblock'><pre><code class='lang-python'>import gradio as gr\n\ndef calculator(num1, operation, num2):\n    if operation == \"add\":\n        return num1 + num2\n    elif operation == \"subtract\":\n        return num1 - num2\n    elif operation == \"multiply\":\n        return num1 * num2\n    elif operation == \"divide\":\n        return num1 / num2\n\ndemo = gr.Interface(\n    calculator,\n    [\n        \"number\",\n        gr.Radio([\"add\", \"subtract\", \"multiply\", \"divide\"]),\n        \"number\"\n    ],\n    \"number\",\n    live=True,\n)\ndemo.launch()\n\n</code></pre></div>\n\n<p><gradio-app space='gradio/calculator_live'></gradio-app></p>\n\n<p>Note there is no submit button, because the interface resubmits automatically on change.</p>\n\n<h2 id=\"streaming-components\">Streaming Components</h2>\n\n<p>Some components have a \"streaming\" mode, such as <code>Audio</code> component in microphone mode, or the <code>Image</code> component in webcam mode. Streaming means data is sent continuously to the backend and the <code>Interface</code> function is continuously being rerun. </p>\n\n<p>The difference between <code>gr.Audio(source='microphone')</code> and <code>gr.Audio(source='microphone', streaming=True)</code>, when both are used in <code>gr.Interface(live=True)</code>, is that the first  <code>Component</code> will automatically submit data and run the <code>Interface</code> function when the user stops recording, whereas the second <code>Component</code> will continuously send data and run the <code>Interface</code> function <em>during</em> recording.</p>\n\n<p>Here is example code of streaming images from the webcam.</p>\n\n<div class='codeblock'><pre><code class='lang-python'>import gradio as gr\nimport numpy as np\n\ndef flip(im):\n    return np.flipud(im)\n\ndemo = gr.Interface(\n    flip, \n    gr.Image(source=\"webcam\", streaming=True), \n    \"image\",\n    live=True\n)\ndemo.launch()\n\n</code></pre></div>\n", "tags": [], "spaces": [], "url": "/guides/reactive-interfaces/", "contributor": null}}